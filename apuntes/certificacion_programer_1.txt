============= CONCEPTOS =============

JAVA

    - Nació en 1991
    - James Goslin fue su creador
    - Sun Microsystems es la empresa donde se creo
    - 2010 Oracle adquiere Sun Microsystems
    - A partir de la versión 7 en adelante el poseedor es Oracle

CARACTERISTICAS

    1 Orientado a objetos               Significa que puedo modelar entidades de la vida real
    2 Distribuido                       Se puede tener en diferentes servidores, lo que hace que este en diferentes lugares, y la aplicación se vuelve ALTAMENTE ESCALABLE
    3 Simple                            No te preocupas por la administración de memoria, la java virtual matchine es quien se encarga de liberar la memoria
                                        Es un lenguaje tipado, reduce los valores en los tipos de datos que sean lo más sencillos posible
    4 Multi-hilo                        Multi-tarea, ejecuta varias tareas a la vez, (puede mostrar el formulario, al mismo tiempo imprimir un reporte)
                                        Agiliza la ejecución de aplicaciones
    5 Independiente de la plataforma    Multiplataforma es que corre en diferentes sistemas operativos gracias a la java virtual machine
                                        1.- Codificación (.java)
                                        2.- Complicación (.class)
                                        3.- Ejecución 
    6 Seguro                            LA PRINCIPAL razón es por el .class, el bytecode, no solo porque tenga .class ya lo ejecuta, hace
                                        diferentes validaciones antes, como que no haya desbordamiento de memoria, etc. HACE UN CHECK de validaciones

JRE

    - Traduce los archivos .class dependiendo del sistema operativo (ya sea para windows o para linux)


PALABRAS RESERVADAS

    - Son palabras propias del lenguaje de programación, que tienen un significado y un objetivo

MODIFICADOR DE ACCESO

    - Mide la visibilidad que tienen los elementos dentro de la aplicación java
    - Decide quien o que ve nuestra clase, método o atributo
    - Hay 4 tipos de modificadores de acceso: public, private, protected y package

    UML

        +   Público
        -   Privado
        #   Protegido
            Default (vacio)

BLOQUE DE CODIGO

    - Contiene varias sentencias que se van a ejecutar
    - Utiliza {} para saber donde inicia y donde termina

SENTENCIA

    - Es una instrucción denotada por ;

METODO MAIN

    - Es el bloque de codigo que contiene instrucciones que java desde un inicio va a ejecutar
    - Por donde va a iniciar a ejecutar el código

JDK

    - Java Development Kit  -   Kit desarrollo o herramientas para desarrollar en java
    - DENTRO de la carpeta de instalación de java, vienen varios .exe ESAS son las herramientas, como jar.exe, javadoc.exe, java.exe, javac.exe
    - En este capitulo (el 2) vamos a utilizar java.exe y javac.exe
    - JAVA.exe  Sirve para ejecutar el código (osease la 3 fase de las 3 que tengo)
    - JAVAC.exe Sirve para compilar el código (osease la 2 fase de las 3 que tengo)

OBJETOS

    - En java los objetos tienen: ATRIBUTOS/CARACTERISTICAS y COMPORTAMIENTOS

CLASE

    - Es una plantilla o prototipo que nos permite crear un objeto
    - Los objetos se crean a partir de la definición de una clase
    - Una clase es como la receta con la que horneamos un pastel

    - Una clase a nivel código fuente solo puede tener dos modificadores de acceso PUBLIC o DEFAULT (Protected y Private dan un error en compilación)                                               IMPORTANTEEEEEEEEEE
    - Se puede DECLARAR más de una clase en un archivo java Y SOLO una de ellas va a ser publica que es la que tiene el nombre del archivo
      (si pones otra y no concuerda con el nombre manda error de compilación)                                                                                                                       IMPORTANTEEEEEEEEEE
    - Se pueden declarar varias clases con el modificador de acceso defult y ninguna llamarse como el archivo                                                                                       IMPORTANTEEEEEEEEEE
    - LA BUENA PRACTICA es solo tener una clase por archivo, si no es complicada de encontrar las otras clases en caso de que las tengan

ATRIBUTOS

    - A diferencia de las clases, los atributos pueden tener los 4 modificadores de acceso.

IDENTIFICADORES

    - Son los nombres que se les dan a las clases, métodos y/o atributos
    - 4 reglas:
        ~ Camel case                                            (REGLA: POR CONVENCIÓN / BUENA PRACTICA)
        ~ Deben iniciar y/o contener con letra, $ o _           (REGLA: SINTAXIS, si no, manda error de compilación)
        ~ Deben ser lo más descriptivos posibles                (REGLA: POR CONVENCIÓN / BUENA PRACTICA)
        ~ No se pueden nombrar utilizando una palabra reservada (REGLA: SINTAXIS, si no, manda error de compilación)

UML

    - Unified Modeling Languaje - Lenguaje Unificado de Modelado
    - Se basa en diagramas para especificar, visualizar y documentar modelos de sistemas de software orientado a objetos

TAXONOMIA

    - Ciencia para clasificar
    - Como por ejemplo (Oviparos en bilogía)

DIAGRAMA DE CLASES

    - Es el diagrama principal utilizado en las etapas de análisis y diseño
    - En el encontraremos la definición de los elementos de una clase como son atributos y métodos
    - Encontraremos tambien la relación entre las entidades definidas en la aplicación

IDE

    - Intagrated Development Enviroment  (Entorno de Desarrollo Integrado)
    - Una herramienta de software que permite a los programadores de software implemendar codigo, compilar y ejecutar

GIT

    - Sistema de Control de versiones

PAQUETE

    - Es una carpeta que contiene clases java
    - El nombrado de los paquetes por convencion es en minúsculas
    - Por lo general llevan el domino de la empresa (org.mx o mx.com)


============= COMANDOS =============

javac                               - Sirve para revisar si efectivamente tengo mi variable de entorno en el path
javac opciones archivo.java         - Sirve para compilar el archivo y generar el .class, se le puede dar una ruta de archivos (opciones) u otras opciones que se usan para compilar!!!
                                      FORZOSAMENTE debe tener la extensión .java!!! si no, no compila, MANDA UN ERROR:  "are only accepted if annotation processing is explicitly requested"
java opciones archivo               - Se utiliza para compilar código fuente. Igual que javac, puede recibir opciones diferentes para su ejecución
                                      LA DIFERENCIA es que no hay que ponerle el .class!!!! (que la shingada), si se lo pones MANDA UN ERROR!
                                      YA TIENE QUE ESTAR COMPILADO Y CREADO EL .class                                                                                                               IMPORTANTEEEEEEEEEE
java opciones archivo[argumentos]   - ASI se le pasan los argumentos!!!!!!!!! :O toda mi vida quise saberlo <3 (LO EJECUTE Y NO SALIO, hay que actualizar cuando lo veamos)

============= RESUMEN CLASES =============

ANTES DE INICIAR
1   "Acerca de Hittechs"                            Una redacción de que es y el nombre de  mi asesor "Cristina Casas" ccasas@hittechs.com.mx
2   "¿Cómo instalar JDK?"                           No funciona ;__; vamos iniciando mal, aun que ya lo tengo (errores/1.png)
3   "¿Cómo configurar la variable de entorno Path?" Un comando en la terminal de windows, no lo segui porque ya la tengo, uso siempre la interfaz
4   "¿Cómo instalar Netbeans 11?"                   Tampoco funciona ;___; lo haré por mi mismo porque no se si en el curo especifiquen cosas en el (errores/2.png)
                                                    Lo instale sin problemas, esta muy sencillo de instalar
5   "¿Como instalar DIA?"                           No lo instale porque es una herramienta para crear diagramas, creo que con StarUML estare bien
6   "Crear una cuenta de GitHub"                    Tampoco funciona ;___; lo bueno que ya tenía la cuenta, porque si no... me atraso (errores/3.png)

INTRODUCCIÓN A LA TECNOLOGÍA JAVA

1   "Principales características de la tecnología 
    Java"                                           Muy largo el video 38 minutos, interesante pero largo, historia y caracteristicas de Java
2   "Hello World Java"                              Creamos un archivo en el blog de notas y fue explicando que era cada cosa, por ejemplo: SENTENCIA, BLOQUE, PALABRA RESERVADA, MODIFICADOR DE ACCESO,
                                                    MÉTODO MAIN, SYSTEM.OUT
3   "Describir e implementar el método main"        Un video un chiquito como de 3 minutos, solo explica que es main y como se nombra/firma
4   "Ejecutar una aplicación Java desde línea
    de comandos utilizando java y javac"            FASES de un aplicación (las 3 que escribi al principio), JDK, 
                                                    JAVAC para compilar mi clase desde la consola (CON EXTENSIÓN DEL ARCHIVO), 
                                                    JAVA para correr el programa (SIN EXTENSION DEL ARCHIVO)

IMPLEMENTANDO CLASES EN JAVA

1   "Presentación de un problema para su análisis
    y modelado"                                     Un video corto sobre una necesidad que tiene hittechs de crear un sistema que controle cosas como:
                                                    EMPLEADOS, DEPARTAMENTOS, GERENTES y SALARIOS (eso fue lo que ubique hasta ahora)
2   "Introducción a UML (Diagramas de Clase)"       Conceptos de diagramas UML, TAXONOMIA, DIAGRAMA DE CLASES, Representación de modificadores de acceso en un diagrama
                                                    hicimos un ejercicio y cree un archivo donde guarde el diagrama de clases
3   "Introducción a Java Netbeans"                  El video muestra como esta estructurado Netbeans, tambien dieron el concepto de IDE"
4   "Introducción a Git y GitHub"                   Una explicación de Git (no habla de GitHub a pesar del titulo jaja), sobre arboles, branches y commit, interesante
5   "Clonar el proyecto HumanResources de GitHub"   Explica como clonar un proyecto desde Netbeans PERO... necesito permisos ;____; y aun no me los dan, 
                                                    intentare continuar con las clases siguientes para no atrasarme
                                                    No se pudo porque utilizan el proyecto en la siguiente parte.. a esperar :(
                                                    ACTUALIZACIÓN: Ya pude, el lunes mismo me dieron permisos y ya pude descargar 15/06/20
6   "Definición y estructura que compone una
    Clase Java"                                     CONCEPTO de Clase, Paquete, explicación de las carpetas del proyecto HumanResources
                                                    MODIFICADORES de acceso para clase!!, IMPORTANCIA de la clase publica y las de default
7   "Definir e implementar campos dentro de una     CONCEPTOS de Atributos, Identificadores (Las 4 reglas, 2 de sytaxis y 2 de buenas practicas), creamos las 3 clases
    clase"                                          definidas en nuestro diagrama de clases
8   "Empujar nuestros cambios a GitHub"             Explicación de como funciona GitHub para subir los cambios, como subir los cambios (git add, commit y push),
                                                    Explica como subir los cambios desde Netbeans (Custumizo la barra con Add, Commit Y Push)
                                                    Hicimos el primer commit de los nuevos archivos (se quita el verde de los archivos en NetBeans)